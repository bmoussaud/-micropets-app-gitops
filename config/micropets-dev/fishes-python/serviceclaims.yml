apiVersion: kapp.k14s.io/v1alpha1
kind: Config
waitRules:
- conditionMatchers:
  - type: ServiceAvailable
    status: "False"
    failure: true
  - type: ServiceAvailable
    status: "True"
    success: true
  resourceMatchers:
  - apiVersionKindMatcher:
      apiVersion: servicebinding.io/v1alpha3
      kind: ServiceBinding
---
apiVersion: servicebinding.io/v1alpha3
kind: ServiceBinding
metadata:
  name: fishes-python-fishes-config
  annotations:
    autoscaling.knative.dev/minScale: "1"
    local-source-proxy.apps.tanzu.vmware.com: akseutap6registry.azurecr.io/lsp:micropets-dev-fishes-python@sha256:cfff56a9c78b3ac8df02523750f1a0923962ffc6bdb117e2e637fecb2f8d09af
    kapp.k14s.io/change-group: servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/name: fishes
    app.kubernetes.io/part-of: micropets
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    micropets/kind: backend
    app.kubernetes.io/component: run
    carto.run/workload-name: fishes-python
spec:
  name: fishes-config
  service:
    apiVersion: services.apps.tanzu.vmware.com/v1alpha1
    kind: ResourceClaim
    name: fishes-config
  workload:
    apiVersion: serving.knative.dev/v1
    kind: Service
    name: fishes-python

