apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: fishes-golang
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/name: fishes
    app.kubernetes.io/part-of: micropets
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    micropets/kind: backend
    app.kubernetes.io/component: run
    carto.run/workload-name: fishes-golang
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/live-update: "true"
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          developer-conventions/add-source-image-label
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/app-live-view-appflavour-check
        developer.apps.tanzu.vmware.com/image-source-digest: akseutap6registry.azurecr.io/fishes:latest@sha256:172d72c21503e2d8bd14a5959e432119be9ce5b0684250610b97bf2e09bcda3d
        developer.conventions/target-containers: workload
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/name: fishes
        app.kubernetes.io/part-of: micropets
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: fishes-golang
        micropets/kind: backend
    spec:
      containers:
      - image: akseutap6registry.azurecr.io/library/tanzu-supply-chain/fishes-golang-micropets-dev@sha256:fb3cb038d39a36aaf5f91fda0bfbfe13d7efef4f0e6ab79dfcdb8e68fe0f1601
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

