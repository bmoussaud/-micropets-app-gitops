apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: birds
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    app.kubernetes.io/name: birds
    app.kubernetes.io/part-of: micropets-app
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: web
    micropets/kind: backend
    app.kubernetes.io/component: run
    carto.run/workload-name: birds
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 2.5.14
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/service-intent-postgres
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"birds","app.kubernetes.io/part-of":"micropets-app","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"web","micropets/kind":"backend"},"name":"birds","namespace":"dev-tap"},"spec":{"env":[{"name":"SPRING_PROFILES_ACTIVE","value":"postgres"}],"params":[{"name":"gitops_server_address","value":"https://github.com/"},{"name":"gitops_repository_owner","value":"bmoussaud"},{"name":"gitops_repository_name","value":"micropets-app-gitops"},{"name":"port","value":8080},{"name":"observability","value":false},{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}}],"serviceAccountName":"tap-default","serviceClaims":[{"name":"birds-database","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ResourceClaim","name":"birds-azure-postgresql-database"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/bmoussaud/my-birds-svc"}}}}
        services.conventions.apps.tanzu.vmware.com/postgres: postgresql/42.2.25
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/name: birds
        app.kubernetes.io/part-of: micropets-app
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: birds
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        micropets/kind: backend
        services.conventions.apps.tanzu.vmware.com/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: birds
    spec:
      containers:
      - env:
        - name: SPRING_PROFILES_ACTIVE
          value: postgres
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: akseutap3registry.azurecr.io/library/tanzu-supply-chain/birds-dev-tap@sha256:f209463fa9956c25550aaa955079dda3e423ba60f1050d893db576af00cbe320
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

