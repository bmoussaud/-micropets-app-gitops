apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-mongodb-app
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
  labels:
    app.kubernetes.io/part-of: simple-mongodb-app
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: simple-mongodb-app
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: simple-mongodb-app
      apps.tanzu.vmware.com/workload-type: server
      carto.run/workload-name: simple-mongodb-app
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/live-update: "true"
        autoscaling.knative.dev/minScale: "1"
        conventions.carto.run/applied-conventions: |-
          developer-conventions/add-source-image-label
          appliveview-sample/app-live-view-appflavour-check
        developer.apps.tanzu.vmware.com/image-source-digest: akseutap3registry.azurecr.io/expressjs-mongodb-statsd-example:latest@sha256:4b04da30f3b126613c1e73cde33c6ec6866c6b32a8e380da75b0036b8d47ae29
        developer.conventions/target-containers: workload
        serviceclaims.supplychain.apps.x-tanzu.vmware.com/extensions: '{"kind":"ServiceClaimsExtension","apiVersion":"supplychain.apps.x-tanzu.vmware.com/v1alpha1","spec":{"serviceClaims":{"database8":{"namespace":"mongodb-instances-fr"}}}}'
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: simple-mongodb-app
        apps.tanzu.vmware.com/workload-type: server
        carto.run/workload-name: simple-mongodb-app
    spec:
      containers:
      - env:
        - name: env
          value: development
        - name: MONGODB_ADDON_URI_X
          value: mongodb://sample-mongodb-account-beta:mMmWOSsEMniWDo9Uha1hrUMWae4g3Zzk3fzO2DBoMRHbtfeBWxsxCrcN4xRBJcHIwhfHNhN4Oj8oACDbNpNgdQ==@sample-mongodb-account-beta.mongo.cosmos.azure.com:10255/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@sample-mongodb-account-beta@
        - name: ADMIN_ACCOUNTS
          valueFrom:
            configMapKeyRef:
              key: ADMIN_ACCOUNTS
              name: autfw-ui-config
        - name: ADMIN_ORGCODE
          valueFrom:
            configMapKeyRef:
              key: ADMIN_ORGCODE
              name: autfw-ui-config
        - name: COOKIE_SECRET
          valueFrom:
            configMapKeyRef:
              key: COOKIE_SECRET
              name: autfw-ui-config
        - name: DB_CONNECTION_STRING
          valueFrom:
            configMapKeyRef:
              key: DB_CONNECTION_STRING
              name: autfw-ui-config
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: autfw-ui-config
        - name: MONGODB_ADDON_URI
          valueFrom:
            configMapKeyRef:
              key: MONGODB_ADDON_URI
              name: autfw-ui-config
        - name: DB_NAME_WORKLOAD
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: autfw-ui-config
        image: akseutap3registry.azurecr.io/library/tanzu-supply-chain/simple-mongodb-app-dev-tap@sha256:258f86d7583bcefdb313d77e91a3c34397fdbf7ef77bc045b3ef532e2b53a0fe
        name: workload
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: simple-mongodb-app
  labels:
    app.kubernetes.io/part-of: simple-mongodb-app
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: simple-mongodb-app
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: simple-mongodb-app
    apps.tanzu.vmware.com/workload-type: server
    carto.run/workload-name: simple-mongodb-app
  ports:
  - targetPort: 8080
    port: 8080
    name: http

