apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: dogs-golang
  namespace: micropets-int
  labels:
    apps.tanzu.vmware.com/workload-type: web
    apps.tanzu.vmware.com/has-tests: "true"
    app.kubernetes.io/part-of: micropets
    app.kubernetes.io/name: dogs
    micropets/kind: backend
  annotations:
    autoscaling.knative.dev/minScale: "1"
spec:
  source:
    git:
      url: https://github.com/bmoussaud/micropets-dogs-golang/
      ref:
        branch: main
  serviceClaims:
    - name: app-config
      ref:
        apiVersion: v1
        kind: Secret
        name: dogs-config
  params:
    - name: testing_pipeline_matching_labels
      value:
        apps.tanzu.vmware.com/pipeline: test-golang
---
apiVersion: v1
kind: Secret
metadata:
  name: dogs-config
  labels:
    app.kubernetes.io/part-of: dogs
type: Opaque
stringData:
  type: app-configuration
  pets_config.json: |-
    {
      "service": {
        "port": ":8181",
        "listen": "true",
        "mode": "RANDOM_NUMBER",
        "frequencyError": 10,
        "delay": {
          "period": 200,
          "amplitude": 0.3
        },
        "from": "Europ"
      },
      "observability": {
        "enable": false,
        "application": "micropets",
        "service": "pets",
        "cluster": "us-west",
        "shard": "primary",
        "server": "xxxx.wavefront.com",
        "token": "x-y-z-y"
      }
    }
